Changes in 4.2:
  o New Features:
    * Added support for specifying Windows image types, adds 4.2 schema
      version. (RBL-6962)

  o Bug Fixes:
    * Creating a platform from a product works properly with
      platformInformation nodes. (RBL-7550)

Changes in 4.1:
  o New Feature:
    * EXPERIMENTAL: allow "labelSuffix" attribute for stages to
      include full labels.

  o Bug Fixes:
    * If the Conary client object is configured to require signatures
      for the label on which the product definition trove lives,
      the source trove for the package definition will now be signed.
      (RPCL-68)
    * Saving the product definition to the repository now preserves
      additional files that were published in the trove. (RPCL-69)
    * ProductDefinition.toPlatformDefinition handles the copying of
      important bits from the product and platform into the new
      platform (RBL-6125)

Changes in 4.0.1:
  o Bug Fixes:
    * The compatibility interfaces created for RPCL-63 are now
      compiled. (RPCL-64)
    * The api1 module now properly sets __all__ to include all public
      interfaces.
    * The preMigrateVersion property now reflects the version of the
      product definition as found in the serialized XML representation
      prior to applying all migrations. (RPCL-66)
    * Older versions of product definition XML data can now be saved.
      (RPCL-67)

Changes in 4.0:
  o New Feature:
    * rpath-xmllib is no longer used. XML schema files are used in
      conjunction with generateDS to produce the XML data binding.
      (RBL-5082)
    * Added support for versioned platform-defintions (RBL-5007).
    * The API is now available under the rpath_proddef module. The
      rpath_common interface will remain available for some time.
      (RPCL-63)
    * The package version now follows the XML schema version.
    * Platform definitions define content source types. (RBL-5300)
    * Content source types can use isSingleton to specify they
      can only be added once. (RBL-5421)
    * A new element, isPlatformTrove, was added to search path
      elements. This controls rebase operations to a specific version
      of platform groups; all other group search paths will be rebased
      to the latest version. This allows for pulling the latest Conary
      even on capsule-based platforms where a specific version of the
      platform group is intended to be used. (RBL-5426)

  o Bug Fixes:
    * Use the faster getFileContentsFromTrove Conary interface, when
      available, for getting product definitions from repositories.

Changes in 1.0:
  o General Availability
    * rpath-product-definition is now released as generally available
      software with a stable API.  See the README file for more
      information.

Changes in 0.6:
  o API Changes:
    * getAllLabelsFromTroves now returns a map that will re-root all
      implicit promotes in order to eliminate shadows. This behavior can
      be overridden by specifying re-roots all implicit promotes in order
      to eliminate shadows. (RPCL-55)
    * getAllLabelsFromTroves now accepts an optional list of labels to
      "flatten" to the target label. (RPCL-55)

  o Documentation Fixes:
    * The documentation for promoteMap specification was incorrect,
      and has been improved. (RPCL-37)      

Changes in 0.5:
  o API Changes:
    * searchPath elements now have additional attributes exposed
      which denote contexts to which they apply.  Right now, the
      two attributes exposed are isResolveTrove and isGroupSearchPathTrove
      which default to True (no change in behavior) but can be
      set to limit the applicability of an element.  In addition,
      product definition objects have additional getResolveTroves
      and getGroupSearchPaths methods which filter the searchPaths
      by the attributes exposed. (RPCL-53)

  o Bug Fixes:
    * Don't add platform defaults if proddef defines any of
      containerTemplates, architectures, buildTemplates, or
      flavorSets. (RPCL-54)

  o Schema Versions:
    * 2.0: Backward-compatible extension to support RPCL-53.

Changes in 0.4:
  o API Changes:
    * Images are now defined differently.  Platforms provide
      generic information about image types, architectures, and sets
      of flavors, which are then referenced from build definitions
      in individual product-definition.xml files.  As part of this
      work, the UnsupportedImageType and ImageTemplateNotFoundError
      exceptions have been removed, and the FlavorSetNotFoundError,
      ContainerTemplateNotFoundError, and BuildTemplateNotFoundError
      exceptions have been added.  Incompatible XML schema changes
      were required, introducing schema version 2.0.  These changes
      are reflected in extensive API changes that are not
      backwards-compatible. (RPCL-21, RPCL-25, RPCL-46)
    * Exception classes have been changed to have names that consistently
      end in "Error": ProductDefinitionTroveNotFound is now
      ProductDefinitionTroveNotFoundError, ProductDefinitionFileNotFound
      is now ProductDefinitionFileNotFoundError, and 
      InvalidSchemaVersionError has been added.
    * The sourceGroup element specifies the source from which a group
      is built.  New APIs have been added to produce and consume the
      sourceGroup element:
        ProductDefinition.getSourceGroup()
        ProductDefinition.setSourceGroup(sourceGroup)
        Build.getBuildSourceGroup()
      (RPCL-44)
    * Search path entries now have a getTroveTup() method to
      produce a consistent trovespec tuple for both the search path item
      and the label from which it was selected. (RPCL-51)

  Bug Fixes:
    * Several platform attributes previously were not copied into a
      product definition during a rebase operation.  This has been
      fixed. (RPCL-48)

  o Schema Versions:
    * 2.0: Modifications required for RPCL-21, RPCL-44, sourceGroup

Changes in 0.3:
  Bug Fixes:
    * The rebase operation now succeeds when an explicit baseLabel
      is provided in the product definition. (RPCL-36)

Changes in 0.2:
  o API Changes:
    * Richer flavor support: for both platform and product, there are
      base flavor, image flavors, and architecture flavors that are
      mixed together to discover flavors of groups to cook and images
      to build. (RPCL-13)
    * When the default label prefix is not the label for a product,
      a different label prefix ("baseLabel") can be provided.  Stage
      suffixes will still be appended to this label. (RPCL-18)
    * Arbitrary label mappings can be provided for promote
      operations with "promoteMap" elements. (RPCL-17)

  o Schema Versions:
    * 1.2: Initial support for richer flavors (RPCL-13)
    * 1.3: Added baseLabel

Changes in 0.1:
  o API Changes:
    * proddef.py moved into rpath_common module.
    * More consistent API function and method naming: elem_dict
      changed to elementDict, elem_obj changed to elementObject,
      elem_list change to elementList.
    * API versioning added via explicit imports
    * Use rpath_common.xmllib instead of conary.lib.xmldata
